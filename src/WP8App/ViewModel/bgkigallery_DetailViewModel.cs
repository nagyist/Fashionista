// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of bgkigallery_Detail ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class bgkigallery_DetailViewModel : ViewModelsBase.VMBase, IViewModels.Ibgkigallery_DetailViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.bgkigallery_bgkitumblrfeed _bgkigallery_bgkitumblrfeed;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="bgkigallery_DetailViewModel" /> class.
        /// </summary>
        /// <param name="bgkigallery_bgkitumblrfeed">The Bgkigallery_bgkitumblrfeed.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public bgkigallery_DetailViewModel(Repositories.bgkigallery_bgkitumblrfeed bgkigallery_bgkitumblrfeed, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_bgkigallery_bgkitumblrfeed = bgkigallery_bgkitumblrfeed;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private EntitiesBase.RssSearchResult _currentRssSearchResult;

        /// <summary>
        /// CurrentRssSearchResult property.
        /// </summary>		
        public EntitiesBase.RssSearchResult CurrentRssSearchResult
        {
            get
            {
				return _currentRssSearchResult;
            }
            set
            {
                SetProperty(ref _currentRssSearchResult, value);
            }
        }
	
		private bool _hasNextpanoramabgkigallery_Detail0;

        /// <summary>
        /// HasNextpanoramabgkigallery_Detail0 property.
        /// </summary>		
        public bool HasNextpanoramabgkigallery_Detail0
        {
            get
            {
				return _hasNextpanoramabgkigallery_Detail0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramabgkigallery_Detail0, value);
            }
        }
	
		private bool _hasPreviouspanoramabgkigallery_Detail0;

        /// <summary>
        /// HasPreviouspanoramabgkigallery_Detail0 property.
        /// </summary>		
        public bool HasPreviouspanoramabgkigallery_Detail0
        {
            get
            {
				return _hasPreviouspanoramabgkigallery_Detail0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramabgkigallery_Detail0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechbgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechbgkigallery_DetailStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentRssSearchResult.Title);
        }
		

        private ICommand _textToSpeechbgkigallery_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechbgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechbgkigallery_DetailStaticControlCommand
        {
            get { return _textToSpeechbgkigallery_DetailStaticControlCommand = _textToSpeechbgkigallery_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechbgkigallery_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Sharebgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public  void Sharebgkigallery_DetailStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentRssSearchResult.Title, "", CurrentRssSearchResult.FeedUrl, CurrentRssSearchResult.ImageUrl);
        }
		

        private ICommand _sharebgkigallery_DetailStaticControlCommand;

        /// <summary>
        /// Gets the Sharebgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public ICommand Sharebgkigallery_DetailStaticControlCommand
        {
            get { return _sharebgkigallery_DetailStaticControlCommand = _sharebgkigallery_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(Sharebgkigallery_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartbgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartbgkigallery_DetailStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.Ibgkigallery_DetailViewModel), CreateTileInfobgkigallery_DetailStaticControl());
        }
		

        private ICommand _pinToStartbgkigallery_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartbgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartbgkigallery_DetailStaticControlCommand
        {
            get { return _pinToStartbgkigallery_DetailStaticControlCommand = _pinToStartbgkigallery_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartbgkigallery_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GoToSourcebgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public  void GoToSourcebgkigallery_DetailStaticControlCommandDelegate() 
        {
				_navigationService.NavigateTo(string.IsNullOrEmpty(CurrentRssSearchResult.FeedUrl) ? null : new Uri(CurrentRssSearchResult.FeedUrl));
        }
		

        private ICommand _goToSourcebgkigallery_DetailStaticControlCommand;

        /// <summary>
        /// Gets the GoToSourcebgkigallery_DetailStaticControlCommand command.
        /// </summary>
        public ICommand GoToSourcebgkigallery_DetailStaticControlCommand
        {
            get { return _goToSourcebgkigallery_DetailStaticControlCommand = _goToSourcebgkigallery_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(GoToSourcebgkigallery_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Nextpanoramabgkigallery_Detail0 command.
        /// </summary>
        public async void Nextpanoramabgkigallery_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var next = await  _bgkigallery_bgkitumblrfeed.Next(CurrentRssSearchResult);

			if(next != null)
				CurrentRssSearchResult = next;

			RefreshHasPrevNext();
        }
		
		
        private bool _loadingCurrentRssSearchResult;
		
        public bool LoadingCurrentRssSearchResult
        {
            get { return _loadingCurrentRssSearchResult; }
            set { SetProperty(ref _loadingCurrentRssSearchResult, value); }
        }

        private ICommand _nextpanoramabgkigallery_Detail0;

        /// <summary>
        /// Gets the Nextpanoramabgkigallery_Detail0 command.
        /// </summary>
        public ICommand Nextpanoramabgkigallery_Detail0
        {
            get { return _nextpanoramabgkigallery_Detail0 = _nextpanoramabgkigallery_Detail0 ?? new ViewModelsBase.DelegateCommand(Nextpanoramabgkigallery_Detail0Delegate); }
        }

        /// <summary>
        /// Delegate method for the Previouspanoramabgkigallery_Detail0 command.
        /// </summary>
        public async void Previouspanoramabgkigallery_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var prev = await  _bgkigallery_bgkitumblrfeed.Previous(CurrentRssSearchResult);

			if(prev != null)
				CurrentRssSearchResult = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramabgkigallery_Detail0;

        /// <summary>
        /// Gets the Previouspanoramabgkigallery_Detail0 command.
        /// </summary>
        public ICommand Previouspanoramabgkigallery_Detail0
        {
            get { return _previouspanoramabgkigallery_Detail0 = _previouspanoramabgkigallery_Detail0 ?? new ViewModelsBase.DelegateCommand(Previouspanoramabgkigallery_Detail0Delegate); }
        }

        private async void RefreshHasPrevNext()
        {
            HasPreviouspanoramabgkigallery_Detail0 = await _bgkigallery_bgkitumblrfeed.HasPrevious(CurrentRssSearchResult);
			HasNextpanoramabgkigallery_Detail0 = await _bgkigallery_bgkitumblrfeed.HasNext(CurrentRssSearchResult);
			LoadingCurrentRssSearchResult = false;
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is EntitiesBase.RssSearchResult)) { return; }
                
                CurrentRssSearchResult = value as EntitiesBase.RssSearchResult;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the bgkigallery_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfobgkigallery_DetailStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentRssSearchResult.Title,
                Title = CurrentRssSearchResult.Title,
                BackTitle = CurrentRssSearchResult.Title,
                BackContent = string.Empty,
                Count = 0,
                BackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                BackBackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                LogoPath = "Logo-cfb601a5-b86b-4c80-963d-208f9e1498e4.png"
            };
            return tileInfo;
        }
    }
}
